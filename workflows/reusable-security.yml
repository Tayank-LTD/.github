name: ‚ôªÔ∏è Reusable Security CI

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Directory of the project"
        required: false
        default: "."
      language:
        description: "Project language (node, python, go, flutter, bun)"
        required: true
        type: string
      docker-build:
        description: "Run security checks inside Docker"
        required: false
        default: true
    secrets:
      SNYK_TOKEN:
        required: false
      PYPI_TOKEN:
        required: false
      NPM_TOKEN:
        required: false

jobs:
  security:
    name: üîê Security Scan (${{ inputs.language }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        if: ${{ inputs.docker-build == 'true' }}
        uses: docker/setup-buildx-action@v3

      # --------------------------
      # Node.js / Bun.js Security
      - name: Node / Bun Security
        if: ${{ inputs.language == 'node' || inputs.language == 'bun' }}
        run: |
          if [ -f package.json ]; then
            echo "üîç Running npm audit..."
            npm install
            npm audit --audit-level=moderate || true
          fi
          echo "üîç Running Snyk scan..."
          if [ -n "${{ secrets.SNYK_TOKEN }}" ]; then
            snyk auth ${{ secrets.SNYK_TOKEN }}
            snyk test --severity-threshold=high || true
          fi

      # --------------------------
      # Python Security
      - name: Python Security
        if: ${{ inputs.language == 'python' }}
        run: |
          python -m pip install --upgrade pip
          pip install safety || true
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
            safety check -r requirements.txt || true
          fi

      # --------------------------
      # Go Security
      - name: Go Security
        if: ${{ inputs.language == 'go' }}
        run: |
          echo "üîç Running Go vulnerability scan..."
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./... || true

      # --------------------------
      # Flutter Security
      - name: Flutter Security
        if: ${{ inputs.language == 'flutter' }}
        run: |
          echo "üîç Flutter security checks..."
          flutter pub get
          flutter pub outdated || true
          # Note: Flutter does not have a native security audit tool yet

      # --------------------------
      # Docker Security Scan
      - name: Docker Image Scan
        if: ${{ inputs.docker-build == 'true' }}
        run: |
          echo "üê≥ Building Docker image for security scan..."
          docker build -t security-scan:${{ github.sha }} .
          echo "üîç Running Trivy scan..."
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image security-scan:${{ github.sha }}

      # --------------------------
      # Upload security reports
      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report-${{ github.sha }}
          path: ${{ inputs.working-directory }}/security-report/
