name: Reusable Bun Docker Build

on:
  workflow_call:
    inputs:
      image-name:
        description: 'Docker image name (e.g., tayank/app)'
        required: true
        type: string
      context:
        description: 'Docker build context (default: current directory)'
        required: false
        type: string
        default: '.'
      dockerfile:
        description: 'Dockerfile path (default: ./Dockerfile)'
        required: false
        type: string
        default: './Dockerfile'
      registry:
        description: 'Docker registry (default: ghcr.io)'
        required: false
        type: string
        default: 'ghcr.io'
      push-image:
        description: 'Push image to registry'
        required: false
        type: boolean
        default: true
      platforms:
        description: 'Target platforms (default: linux/amd64,linux/arm64)'
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      bun-version:
        description: 'Bun version to use for base image'
        required: false
        type: string
        default: '1.1.20'

jobs:
  docker:
    name: 🐳 Docker Build & Push (Bun)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image-name }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to Docker registry
        if: ${{ inputs.push-image }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🧱 Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: ${{ inputs.push-image }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUN_VERSION=${{ inputs.bun-version }}
            GIT_SHA=${{ github.sha }}

      - name: 📦 Summary
        run: |
          echo "✅ Docker image built successfully!"
          echo "📦 Image: ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image-name }}"
          echo "🏷️ Tags: ${{ steps.meta.outputs.tags }}"
