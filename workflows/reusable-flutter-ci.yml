name: Reusable Flutter CI (Enhanced)

on:
  workflow_call:
    inputs:
      flutter-version:
        description: 'Flutter version to use'
        required: false
        type: string
        default: '3.24.0'
      flutter-channel:
        description: 'Flutter channel (stable, beta, dev)'
        required: false
        type: string
        default: 'stable'
      coverage-threshold:
        description: 'Minimum code coverage percentage'
        required: false
        type: number
        default: 80
      working-directory:
        description: 'Working directory for the app'
        required: false
        type: string
        default: '.'
      build-platforms:
        description: 'Platforms to build (android,ios,web)'
        required: false
        type: string
        default: 'android,ios,web'
      run-integration-tests:
        description: 'Run integration tests'
        required: false
        type: boolean
        default: false

jobs:
  analyze:
    name: üîç Analyze & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ inputs.flutter-version }}
          channel: ${{ inputs.flutter-channel }}
          cache: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ inputs.working-directory }}/build
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Get dependencies
        working-directory: ${{ inputs.working-directory }}
        run: flutter pub get

      - name: Verify formatting
        working-directory: ${{ inputs.working-directory }}
        run: dart format --set-exit-if-changed .

      - name: Analyze
        working-directory: ${{ inputs.working-directory }}
        run: flutter analyze --fatal-infos

  security:
    name: üîê Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install osv-scanner
        run: |
          curl -sSL https://github.com/google/osv-scanner/releases/latest/download/osv-scanner-linux-amd64 -o osv-scanner
          chmod +x osv-scanner
      - name: Scan for vulnerabilities
        run: ./osv-scanner --lockfile=pubspec.lock || true

  test:
    name: üß™ Tests & Coverage
    runs-on: ubuntu-latest
    needs: [analyze]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ inputs.flutter-version }}
          channel: ${{ inputs.flutter-channel }}
          cache: true

      - name: Get dependencies
        working-directory: ${{ inputs.working-directory }}
        run: flutter pub get

      - name: Run tests
        working-directory: ${{ inputs.working-directory }}
        run: flutter test --coverage

      - name: Verify coverage
        run: |
          sudo apt-get install -y lcov
          coverage=$(lcov --summary coverage/lcov.info | grep lines | awk '{print $2}' | sed 's/%//')
          echo "Coverage: ${coverage}%"
          if (( $(echo "$coverage < ${{ inputs.coverage-threshold }}" | bc -l) )); then
            echo "‚ùå Below threshold"; exit 1
          fi

      - uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/lcov.info

  build:
    name: üèóÔ∏è Build Flutter Apps
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        platform: [android, web]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ inputs.flutter-version }}
          channel: ${{ inputs.flutter-channel }}
          cache: true

      - name: Get dependencies
        working-directory: ${{ inputs.working-directory }}
        run: flutter pub get

      - name: Build
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ "${{ matrix.platform }}" == "android" ]; then
            flutter build apk --release
          elif [ "${{ matrix.platform }}" == "web" ]; then
            flutter build web --release --base-href=/tayank/
          fi

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/web/
          retention-days: 7

  notify:
    name: üì¢ GitHub Summary
    if: always()
    needs: [analyze, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Create build summary
        run: |
          echo "## üß≠ CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "- üß™ Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- üîç Analyze: ${{ needs.analyze.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- üèóÔ∏è Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ‚è∞ Run completed at $(date)" >> $GITHUB_STEP_SUMMARY
