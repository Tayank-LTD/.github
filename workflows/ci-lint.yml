name: 🚀 CI - Lint ve Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Go için lint ve test
  go-lint:
    name: 🐹 Go Lint ve Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: 📥 Kodu Çek
        uses: actions/checkout@v4

      - name: 🐹 Go Kur
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
          cache-dependency-path: ./backend/go.sum

      - name: 📦 Bağımlılıkları İndir
        run: go mod download

      - name: 🧹 Go Format Kontrolü
        run: test -z $(gofmt -l .)

      - name: 🔍 Go Lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: ./backend
          version: latest

      - name: 🧪 Go Test
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: 📊 Test Kapsamı
        run: |
          go tool cover -func=coverage.out
          total=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Total coverage: $total%"
          if (( $(echo "$total < 80" | bc -l) )); then
            echo "❌ Test coverage 80%'in altında: $total%"
            exit 1
          fi

  # Frontend için lint ve test
  frontend-lint:
    name: 🌐 Frontend Lint ve Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: 📥 Kodu Çek
        uses: actions/checkout@v4

      - name: 📦 Bun Kur
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Bağımlılıkları İndir
        run: bun install

      - name: 🔍 TypeScript Kontrolü
        run: bun run type-check

      - name: 🧹 ESLint
        run: bun run lint

      - name: 🎨 Prettier Kontrolü
        run: bun run format:check

      - name: 🧪 Test
        run: bun run test

      - name: 🏗️ Build
        run: bun run build

  # Python için lint ve test
  python-lint:
    name: 🐍 Python Lint ve Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bots/python
    
    steps:
      - name: 📥 Kodu Çek
        uses: actions/checkout@v4

      - name: 🐍 Python Kur
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: ./bots/python/requirements.txt

      - name: 📦 Bağımlılıkları İndir
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 pytest

      - name: 🎨 Black Format Kontrolü
        run: black --check .

      - name: 🔍 Flake8 Lint
        run: flake8 .

      - name: 🧪 Pytest
        run: pytest

  # Flutter için lint ve test
  flutter-lint:
    name: 📱 Flutter Lint ve Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile
    
    steps:
      - name: 📥 Kodu Çek
        uses: actions/checkout@v4

      - name: 📱 Flutter Kur
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.x'
          cache: true
          cache-key: flutter-packages
          cache-path: ./mobile/.dart_tool

      - name: 📦 Paketleri Getir
        run: flutter pub get

      - name: 🔍 Dart Analyze
        run: flutter analyze

      - name: 🎨 Dart Format Kontrolü
        run: dart format --set-exit-if-changed .

      - name: 🧪 Flutter Test
        run: flutter test

      - name: 🏗️ Build
        run: flutter build apk --debug

  # Güvenlik taramaları
  security-scan:
    name: 🔒 Güvenlik Taraması
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Kodu Çek
        uses: actions/checkout@v4

      - name: 🔍 Trivy Güvenlik Taraması
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📤 Güvenlik Sonuçlarını Yükle
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Sonuçları birleştirme
  summary:
    name: 📊 Sonuç Özeti
    runs-on: ubuntu-latest
    needs: [go-lint, frontend-lint, python-lint, flutter-lint, security-scan]
    
    steps:
      - name: ✅ Tüm Testler Başarılı
        if: ${{ always() && contains(needs.*.result, 'failure') }}
        run: |
          echo "❌ Bazı testler başarısız oldu"
          exit 1

      - name: 🎉 Tüm Testler Başarılı
        if: ${{ always() && !contains(needs.*.result, 'failure') }}
        run: echo "✅ Tüm testler başarıyla tamamlandı"